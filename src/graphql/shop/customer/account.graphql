#Shop\Customer\Account Related APIs
extend type Query @guard(with: ["api"]) {
    accountInfo: CustomerResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\AccountMutation@get")

    getSubscribeDetail(
        email: String! @rules(apply: ["email"])
    ): Subscriber @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Common\\NewsletterSubscriberMutation@get")
}

extend type Mutation {
    subscribe(
        email: String! @rules(apply: ["email"])
    ): Subscriber @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Common\\NewsletterSubscriberMutation@subscribe")

    unSubscribeSubscription(
        token: String! @rules(apply: ["required"])
    ): StatusResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Common\\NewsletterSubscriberMutation@delete")

    updateAccount(
        input: UpdateAccountInput! @spread
    ): CustomerResponse @guard(with: ["api"]) @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\AccountMutation@update")

    deleteAccount(
        password: String! @rules(apply: ["required"])
    ): StatusResponse @guard(with: ["api"]) @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\AccountMutation@delete")
}

input UpdateAccountInput {
    firstName: String! @rename(attribute: "first_name") @rules(apply: ["required"])
    lastName: String! @rename(attribute: "last_name") @rules(apply: ["required"])
    email: String! @rules(apply: ["email"])
    phone: String! @rules(apply: ["required"])
    gender: Gender! @rules(apply: ["required"])
    dateOfBirth: String @rename(attribute: "date_of_birth")
    currentPassword: String @rename(attribute: "current_password")
    newPassword: String @rename(attribute: "new_password")
    newPasswordConfirmation: String @rename(attribute: "new_password_confirmation")
    newsletterSubscriber: Boolean @rename(attribute: "subscribed_to_news_letter")
    uploadType: UploadType @rename(attribute: "upload_type")
    imageUrl: String @rename(attribute: "image_url")
    image: Upload
}
