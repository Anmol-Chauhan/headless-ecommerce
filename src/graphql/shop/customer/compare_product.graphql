#Shop\Customer\CompareProduct Related APIs
extend type Query @guard(with: ["api"]){
    compareProducts(
        input: FilterCompareProductsInput @spread
    ): [CustomerCompareProduct!] @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\CompareMutation@compareProducts")

    compareProduct(id: ID @eq): CustomerCompareProduct @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\CompareMutation@compareProducts")
}

extend type Mutation @guard(with: ["api"]) {
    addToCompare(
        productId: ID! @rename(attribute: "product_id")
    ): AddToCompareResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\CompareMutation@store")

    removeFromCompareProduct(
        productId: ID! @rename(attribute: "product_id")
    ): RemoveCompareResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\CompareMutation@delete")

    removeAllCompareProducts: RemoveCompareResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\CompareMutation@deleteAll")
}

type AddToCompareResponse {
    success: Boolean
    message: String
    compareProduct: [CustomerCompareProduct]
    cart: Cart @field(resolver: "Webkul\\Checkout\\Cart@getCart")
}

type RemoveCompareResponse {
    success: Boolean
    message: String
    compareProduct: [CustomerCompareProduct]
    cart: Cart @field(resolver: "Webkul\\Checkout\\Cart@getCart")
}

input FilterCompareProductsInput {
    page: Int
    limit: Int
    id: Int
    productId: Int @rename(attribute: "product_id")
    productName: String @rename(attribute: "product_name")
    price: Float
}

type CustomerCompareProduct {
    id: ID!
    productId: ID! @rename(attribute: "product_id")
    customerId: ID! @rename(attribute: "customer_id")
    createdAt: DateTime! @rename(attribute: "created_at")
    updatedAt: DateTime! @rename(attribute: "updated_at")
    product: Product! @belongsTo(relation: "product")
    customer: Customer!
    cart: Cart @field(resolver: "Webkul\\Checkout\\Cart@getCart")
}
